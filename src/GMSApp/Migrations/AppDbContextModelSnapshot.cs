// <auto-generated />
using System;
using GMSApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GMSApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GMSApp.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Mainid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mainid");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("GMSApp.Models.CoreMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FooterFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FooterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HeaderFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("HeaderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoreMains");
                });

            modelBuilder.Entity("GMSApp.Models.FileItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("GMSApp.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Mainid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mainid");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("GMSApp.Models.ItemRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("JobcardId")
                        .HasColumnType("int");

                    b.Property<int>("Joborderid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobcardId");

                    b.HasIndex("Joborderid");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("ItemRows");
                });

            modelBuilder.Entity("GMSApp.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Mainid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Mainid");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("GMSApp.Models.Jobcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Propertyimage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobcards");
                });

            modelBuilder.Entity("GMSApp.Models.Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoreMainId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoreMainId");

                    b.HasIndex("LabelId");

                    b.HasIndex("TypeId");

                    b.ToTable("Mains");
                });

            modelBuilder.Entity("GMSApp.Models.Main+Labels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductlabelsId")
                        .HasColumnType("int");

                    b.Property<int>("inventorylabelsId")
                        .HasColumnType("int");

                    b.Property<int>("invoicelabelsId")
                        .HasColumnType("int");

                    b.Property<int>("quotationlabelsId")
                        .HasColumnType("int");

                    b.Property<int>("vendorlabelsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductlabelsId");

                    b.HasIndex("inventorylabelsId");

                    b.HasIndex("invoicelabelsId");

                    b.HasIndex("quotationlabelsId");

                    b.HasIndex("vendorlabelsId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("GMSApp.Models.Main+inventorylabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("inventorylabel");
                });

            modelBuilder.Entity("GMSApp.Models.Main+invoicelabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("invoicelabel");
                });

            modelBuilder.Entity("GMSApp.Models.Main+productlabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productlabel");
                });

            modelBuilder.Entity("GMSApp.Models.Main+quotationlabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("quotationlabel");
                });

            modelBuilder.Entity("GMSApp.Models.Main+vendorlabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("vendorlabel");
                });

            modelBuilder.Entity("GMSApp.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Mainid")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Mainid");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GMSApp.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("GMSApp.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("GMSApp.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("GMSApp.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("GMSApp.Models.Vendor+Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("GMSApp.Models.Vendor+VendorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorData");
                });

            modelBuilder.Entity("GMSApp.Models.job.Joborder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("B")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("F")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("LS")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OdoNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RS")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Joborders");
                });

            modelBuilder.Entity("GMSApp.Models.Account", b =>
                {
                    b.HasOne("GMSApp.Models.Main", "Main")
                        .WithMany("Accounts")
                        .HasForeignKey("Mainid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Main");
                });

            modelBuilder.Entity("GMSApp.Models.Inventory", b =>
                {
                    b.HasOne("GMSApp.Models.Main", "Main")
                        .WithMany("Inventories")
                        .HasForeignKey("Mainid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Main");
                });

            modelBuilder.Entity("GMSApp.Models.ItemRow", b =>
                {
                    b.HasOne("GMSApp.Models.Jobcard", null)
                        .WithMany("Items")
                        .HasForeignKey("JobcardId");

                    b.HasOne("GMSApp.Models.job.Joborder", "Joborder")
                        .WithMany("Items")
                        .HasForeignKey("Joborderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.PurchaseOrder", null)
                        .WithMany("Items")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joborder");
                });

            modelBuilder.Entity("GMSApp.Models.Job", b =>
                {
                    b.HasOne("GMSApp.Models.Main", "Main")
                        .WithMany("Jobs")
                        .HasForeignKey("Mainid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Main");
                });

            modelBuilder.Entity("GMSApp.Models.Main", b =>
                {
                    b.HasOne("GMSApp.Models.CoreMain", "CoreMain")
                        .WithMany("Main")
                        .HasForeignKey("CoreMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.Main+Labels", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.HasOne("GMSApp.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("CoreMain");

                    b.Navigation("Label");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GMSApp.Models.Main+Labels", b =>
                {
                    b.HasOne("GMSApp.Models.Main+productlabel", "Productlabels")
                        .WithMany()
                        .HasForeignKey("ProductlabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.Main+inventorylabel", "inventorylabels")
                        .WithMany()
                        .HasForeignKey("inventorylabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.Main+invoicelabel", "invoicelabels")
                        .WithMany()
                        .HasForeignKey("invoicelabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.Main+quotationlabel", "quotationlabels")
                        .WithMany()
                        .HasForeignKey("quotationlabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.Main+vendorlabel", "vendorlabels")
                        .WithMany()
                        .HasForeignKey("vendorlabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productlabels");

                    b.Navigation("inventorylabels");

                    b.Navigation("invoicelabels");

                    b.Navigation("quotationlabels");

                    b.Navigation("vendorlabels");
                });

            modelBuilder.Entity("GMSApp.Models.Payment", b =>
                {
                    b.HasOne("GMSApp.Models.Main", "Main")
                        .WithMany("Payments")
                        .HasForeignKey("Mainid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Main");
                });

            modelBuilder.Entity("GMSApp.Models.Vendor", b =>
                {
                    b.HasOne("GMSApp.Models.Main", "Main")
                        .WithMany("Vendors")
                        .HasForeignKey("MainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Main");
                });

            modelBuilder.Entity("GMSApp.Models.Vendor+VendorData", b =>
                {
                    b.HasOne("GMSApp.Models.Vendor+Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMSApp.Models.Vendor", null)
                        .WithMany("Vendors")
                        .HasForeignKey("VendorId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("GMSApp.Models.CoreMain", b =>
                {
                    b.Navigation("Main");
                });

            modelBuilder.Entity("GMSApp.Models.Jobcard", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GMSApp.Models.Main", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Inventories");

                    b.Navigation("Jobs");

                    b.Navigation("Payments");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("GMSApp.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GMSApp.Models.Vendor", b =>
                {
                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("GMSApp.Models.job.Joborder", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
